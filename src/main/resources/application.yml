management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'configprops',
            'env',
            'health',
            'info',
            'jhimetrics',
            'jhiopenapigroups',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
            'caches',
            'liquibase',
          ]
  info:
    git:
      mode: full
    env:
      enabled: true

spring:
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  devtools:
    livereload:
      port: 51201
  cloud:
    config:
      enabled: false
    function:
      definition: dispatchOrder
    stream:
      bindings:
        dispatchOrder-in-0:
          destination: order-dispatched
          group: {spring.application.name}
        acceptOrder-out-0:
          destination: order-accepted
      rabbit:
        bindings:
          acceptOrder-out-0:
            producer:
              transacted: true
  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: password
    connection-timeout: 5s
  r2dbc:
    username: polardb
    password:
    url: r2dbc:postgresql://localhost:5590/polardb_order
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5590/polardb_order
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_SERVER_URL:http://localhost:50907}/realms/PolarBookshop


server:
  port: 50201
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

polar:
  catalog-service-uri: "http://localhost:50101"
  home-message: Default Env, Welcome here
